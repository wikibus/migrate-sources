output r2rml

template brochureId "https://sources.test.wikibus.org/brochure/{0}"
template magazineId "https://sources.test.wikibus.org/magazine/{0}"
template magazineIssues "https://sources.test.wikibus.org/magazine/{0}/issues"
template magazineIssueId "https://sources.test.wikibus.org/magazine/{0}/issue/{1}"
template bookId "https://sources.test.wikibus.org/book/{0}"
template storageLocationId "https://sources.test.wikibus.org/storage-location/{0}"
template fileCabinetId "https://sources.test.wikibus.org/file-cabinet/{0}"
template brochurePdfId "https://sources.test.wikibus.org/brochure/{0}/file"
template legacyImageId "legacy-image-{0}"
template languageId "http://lexvo.org/id/iso639-1/{0}"
template userId "https://users.wikibus.org/user/{0}"
template date "{0}-{1}-{2}"
template imageId "https://sources.test.wikibus.org/image/{0}"
template wishlistId "https://sources.test.wikibus.org/wishlist/{0}/{1}"

map Brochure from wikibus.brochures {
	subject template brochureId with Id;

	types
		wbo.Source
		wbo.Brochure

	properties
		bibo.pages from Pages with datatype xsd.int;
		opus.year from Year with datatype xsd.gYear;
		opus.month from Month with datatype xsd.gMonth;
		dcterms.date template date with Year Month Day;
		wba.storageLocation template storageLocationId with Id;
		dcterms.language template languageId with Language;
		dcterms.title from FolderName;
		dcterms.description from Notes;
		dcterms.identifier from FolderCode;
		schema.contributor template userId with User;
		schema.associatedMedia template brochurePdfId with Id;
		schema.image template legacyImageId with LegacyImage as BlankNode;
		schema.primaryImageOfPage template legacyImageId with LegacyImage as BlankNode;
		dtype.orderIndex from Version;
}

map Book from wikibus.books {
	subject template bookId with Id;

	//graphs
	//	template bookId with Id;

	types
		wbo.Source
		wbo.Book
		schema.Book
		bibo.Book

	properties
		bibo.pages from Pages with datatype xsd.int;
		opus.year from Year with datatype xsd.gYear;
		dcterms.description from Notes;
		dcterms.title from BookTitle;
		schema.isbn from BookISBN;
		dcterms.language template languageId with Language;
		schema.image template legacyImageId with LegacyImage as BlankNode;
		schema.primaryImageOfPage template legacyImageId with LegacyImage as BlankNode;
		schema.author template "book-{0}-author" with Id as BlankNode;
		dtype.orderIndex from Version;
}

map MagazineIssue from wikibus.magazineIssues {
	subject template magazineIssueId with MagazineSlug Id;

	types
		wbo.Source

	properties
		bibo.pages from Pages with datatype xsd.int;
		opus.year from Year with datatype xsd.gYear;
		opus.month from Month with datatype xsd.gMonth;
		dcterms.date template date with Year Month Day;
		wba.storageLocation template storageLocationId with Id;
		schema.isPartOf template magazineId with MagazineSlug;
		schema.contributor template userId with User;
		schema.issueNumber from MagIssueNumber;
		dtype.orderIndex from Version;
}

map BookOwners from wikibus.books {
	subject template userId with User;

	properties
		schema.owns template bookId with Id;
}

map BookAuthors from wikibus.books {
	subject template "book-{0}-author" with Id as BlankNode;

	properties
		schema.name from BookAuthor;
}

map StorageLocation from wikibus.sources {
	subject template storageLocationId with Id;

	properties
		dcterms.identifier from FileCabinet;
		dtype.position from FileOffset with datatype xsd.int;
}

map BrochureFile from wikibus.brochures {
	subject template brochurePdfId with Id;

	types
		schema.MediaObject

	properties
		schema.contentSize from ContentSize with datatype xsd.long;
		schema.encodingFormat constant "application/pdf";
		schema.contentUrl from ContentUrl with datatype schema.URL;
}

map BrochureLegacyImage from wikibus.brochures {
	subject template legacyImageId with LegacyImage as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/brochure/{0}/image" with Id as Literal;
		schema.thumbnail template "brochure-image-thumb-{0}" with Id as BlankNode;
}

map BrochureImageThumbnail from wikibus.brochures {
	subject template "brochure-image-thumb-{0}" with Id as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/brochure/{0}/image/small" with Id as Literal;
}

map MagazineIssueLegacyImage from wikibus.magazineIssues {
	subject template legacyImageId with LegacyImage as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/magazine/{0}/issue/{1}/image" with MagazineSlug Id;
		schema.thumbnail template "image-thumb-{0}" with Id as BlankNode;
}

map MagazineIssueImageThumbnail from wikibus.magazineIssues {
	subject template "issue-image-thumb-{0}" with Id as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/magazine/{0}/issue/{1}/image/small" with MagazineSlug Id;
}

map BookLegacyImage from wikibus.books {
	subject template legacyImageId with LegacyImage as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/book/{0}/image" with Id as Literal;
		schema.thumbnail template "book-image-thumb-{0}" with Id as BlankNode;
}

map BookImageThumbnail from wikibus.books {
	subject template "book-image-thumb-{0}" with Id as BlankNode;

    types
        schema.ImageObject

	properties
		schema.contentUrl template "https://wikibus-sources.herokuapp.com/book/{0}/image/small" with Id as Literal;
}

map BrochureImage from wikibus.images {
    subject template brochureId with SourceId;

    properties
        schema.image template imageId with ExternalId;
}

map BrochurePrimaryImage from wikibus.primaryImages {
    subject template brochureId with SourceId;

    properties
        schema.primaryImageOfPage template imageId with ExternalId;
}

map Image from wikibus.images {
    subject template imageId with ExternalId;

    types
        schema.ImageObject

    properties
        schema.contentUrl from OriginalUrl with datatype schema.URL;
        schema.thumbnail template "cloudinary-image-{0}" with Id as BlankNode;
        dtype.orderIndex from OrderIndex with datatype xsd.int;
}

map ImageThumbnail from wikibus.images {
    subject template "cloudinary-image-{0}" with Id as BlankNode;

    types
        schema.ImageObject

    properties
        schema.contentUrl from ThumbnailUrl with datatype schema.URL;
}

map User from wikibus.users {
	subject template userId with UserId;

	properties
		wba.driveImportFolder from DriveImportFolder;
}

map Magazine from wikibus.magazines {
	subject template magazineId with Slug;

	types
		wbo.Source
		schema.Periodical

	properties
		dcterms.title from Name;
		dcterms.description from SubName;
		wba.issues template magazineIssues with Slug;
}

map Wishlist from wikibus.wishlist {
	subject template wishlistId with User SourceId;

	types
		wbo.WishlistItem

	properties
		wbo.^source template brochureId with SourceId;
		wbo.done from Done with datatype xsd.boolean;
		wbo.user template userId with User;
}